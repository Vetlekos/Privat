import numpy as np
import pandas as pd
from pandas_datareader import data as pdr
import matplotlib.pyplot as plt
import fix_yahoo_finance as yf
stock = ['AAPL']
yf.pdr_override(stock)
start = pd.to_datetime('2013-12-12')
end = pd.to_datetime('2018-03-29')
data = pdr.get_data_yahoo(stock, start=start, end=end)['Adj Close']
daily_returns = (data/data.shift(1))-1
daily_returns.hist(bins=100)
plt.show()


    # Optimize k number of neighbors
    # Create range of odd numbers for k
    neighbors = list(range(100,500,2))

    # Create empty list that will hold cv scores
    cv_scores = [ ]

    #Perform 10-fold cross validation
    for K in neighbors:
        model = KNeighborsClassifier(n_neighbors= K)
        scores = cross_val_score(model,X_train,y_train,cv = 10, scoring = "accuracy")
        cv_scores.append(scores.mean())

    #Calculate optimal K using misclassification error method
    #changing to mis class error
    mse = [1-x for x in cv_scores]

    #determining best k
    optimal_k = neighbors[mse.index(min(mse))]
    print("The optimal no. of neighbors is {}".format(optimal_k))
